# ℹ️ Contents of this file were (almost entirely) autogenerated by the command
# `sqlacodegen --generator sqlmodels postgresql://localhost:5432/postgres`

from typing import List, Optional
from datetime import datetime

from sqlmodel import Field, SQLModel, Relationship
from sqlalchemy import (
    CHAR,
    Enum,
    String,
    Boolean,
    Integer,
    DateTime,
    BigInteger,
    UniqueConstraint,
    ForeignKeyConstraint,
    PrimaryKeyConstraint,
)
from sqlalchemy.orm import mapped_column


class Title(SQLModel, table=True):
    __tablename__ = "titles"
    __table_args__ = (
        PrimaryKeyConstraint("id", name="titles_pkey"),
        UniqueConstraint("netflix_id", name="netflix_id"),
    )

    id: Optional[int] = Field(
        default=None, sa_column=mapped_column("id", Integer, primary_key=True)
    )
    netflix_id: Optional[int] = Field(
        default=None, sa_column=mapped_column("netflix_id", BigInteger)
    )
    title: Optional[str] = Field(
        default=None, sa_column=mapped_column("title", String(256))
    )
    content_type: Optional[str] = Field(
        default=None,
        sa_column=mapped_column(
            "content_type", Enum("movie", "series", name="content_type")
        ),
    )
    release_year: Optional[int] = Field(
        default=None, sa_column=mapped_column("release_year", Integer)
    )
    runtime: Optional[int] = Field(
        default=None, sa_column=mapped_column("runtime", Integer)
    )

    availability: List["Availability"] = Relationship(back_populates="title")


class Availability(SQLModel, table=True):
    __table_args__ = (
        ForeignKeyConstraint(
            ["netflix_id"], ["titles.netflix_id"], name="availability_netflix_id_fkey"
        ),
        PrimaryKeyConstraint("id", name="availability_pkey"),
    )

    id: int = Field(
        default=None, sa_column=mapped_column("id", Integer, primary_key=True)
    )
    netflix_id: int = Field(
        default=None, sa_column=mapped_column("netflix_id", BigInteger)
    )
    region_code: Optional[str] = Field(
        default=None, sa_column=mapped_column("region_code", String(12))
    )
    country: Optional[str] = Field(
        default=None, sa_column=mapped_column("country", CHAR(2))
    )
    available: Optional[bool] = Field(
        default=None, sa_column=mapped_column("available", Boolean)
    )
    checked_at: Optional[datetime] = Field(
        default=None, sa_column=mapped_column("checked_at", DateTime)
    )

    title: Title = Relationship(back_populates="availability")
